{"ast":null,"code":"var _jsxFileName = \"/Users/elenajerdeva/Desktop/rick-and-morty-/rickandmortyapi/src/components/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getAllCharacters } from '../Api/Api';\nimport CharactersList from '../CharactersList/CharactersList';\nimport { SortCharacters } from '../SortCharacters/SortCharacters';\nimport FilterCharacters from '../FilterCharacters/FilterCharacters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [allCharacters, setAllCharacters] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [charactersPerPage] = useState(10);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const heroes = await getAllCharacters();\n        setAllCharacters(heroes);\n        setCharacters(heroes);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Логика для пагинации\n    const indexOfLastCharacter = currentPage * charactersPerPage;\n    const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\n    const currentCharacters = characters.slice(indexOfFirstCharacter, indexOfLastCharacter);\n    setFilteredCharacters(currentCharacters);\n  }, [characters, currentPage, charactersPerPage]);\n  const updateCharacters = sortedCharacters => {\n    setCharacters(sortedCharacters);\n  };\n  const handleFilter = param => {\n    if (!param) {\n      setCharacters(allCharacters);\n    } else {\n      const filteredData = allCharacters.filter(character => {\n        return character.status === 'param';\n      });\n      setCharacters(filteredData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterCharacters, {\n      filter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SortCharacters, {\n      update: updateCharacters,\n      data: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharactersList, {\n      characters: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"0nA/75zkkIKWFWLaxU34Num2jAo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","getAllCharacters","CharactersList","SortCharacters","FilterCharacters","jsxDEV","_jsxDEV","Home","_s","allCharacters","setAllCharacters","characters","setCharacters","currentPage","setCurrentPage","charactersPerPage","fetchData","heroes","error","console","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","setFilteredCharacters","updateCharacters","sortedCharacters","handleFilter","param","filteredData","filter","character","status","children","fileName","_jsxFileName","lineNumber","columnNumber","update","data","_c","$RefreshReg$"],"sources":["/Users/elenajerdeva/Desktop/rick-and-morty-/rickandmortyapi/src/components/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getAllCharacters } from '../Api/Api';\nimport CharactersList from '../CharactersList/CharactersList';\nimport { SortCharacters } from '../SortCharacters/SortCharacters';\nimport FilterCharacters from '../FilterCharacters/FilterCharacters';\n\nconst Home = () => {\n    const [allCharacters, setAllCharacters] = useState([]);\n    const [characters, setCharacters] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [charactersPerPage] = useState(10); \n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const heroes = await getAllCharacters();\n                setAllCharacters(heroes);\n                setCharacters(heroes); \n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        // Логика для пагинации\n        const indexOfLastCharacter = currentPage * charactersPerPage;\n        const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\n        const currentCharacters = characters.slice(indexOfFirstCharacter, indexOfLastCharacter);\n        setFilteredCharacters(currentCharacters);\n    }, [characters, currentPage, charactersPerPage]);\n\n    const updateCharacters = (sortedCharacters) => {\n        setCharacters(sortedCharacters);\n    };\n\n    const handleFilter = (param) => {\n        if (!param) {\n            setCharacters(allCharacters);\n        } else {\n            const filteredData = allCharacters.filter(character => {\n                return character.status === 'param';\n            });\n            setCharacters(filteredData);\n        }\n    };\n\n    return (\n        <div>\n            <FilterCharacters filter={handleFilter}/>\n            <SortCharacters update={updateCharacters} data={characters} />\n            <CharactersList characters={characters} />\n        </div>\n    );\n};\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,cAAc,QAAQ,kCAAkC;AACjE,OAAOC,gBAAgB,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMhB,gBAAgB,CAAC,CAAC;QACvCS,gBAAgB,CAACO,MAAM,CAAC;QACxBL,aAAa,CAACK,MAAM,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDF,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMqB,oBAAoB,GAAGP,WAAW,GAAGE,iBAAiB;IAC5D,MAAMM,qBAAqB,GAAGD,oBAAoB,GAAGL,iBAAiB;IACtE,MAAMO,iBAAiB,GAAGX,UAAU,CAACY,KAAK,CAACF,qBAAqB,EAAED,oBAAoB,CAAC;IACvFI,qBAAqB,CAACF,iBAAiB,CAAC;EAC5C,CAAC,EAAE,CAACX,UAAU,EAAEE,WAAW,EAAEE,iBAAiB,CAAC,CAAC;EAEhD,MAAMU,gBAAgB,GAAIC,gBAAgB,IAAK;IAC3Cd,aAAa,CAACc,gBAAgB,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAI,CAACA,KAAK,EAAE;MACRhB,aAAa,CAACH,aAAa,CAAC;IAChC,CAAC,MAAM;MACH,MAAMoB,YAAY,GAAGpB,aAAa,CAACqB,MAAM,CAACC,SAAS,IAAI;QACnD,OAAOA,SAAS,CAACC,MAAM,KAAK,OAAO;MACvC,CAAC,CAAC;MACFpB,aAAa,CAACiB,YAAY,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACF,gBAAgB;MAAC0B,MAAM,EAAEH;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzC/B,OAAA,CAACH,cAAc;MAACmC,MAAM,EAAEb,gBAAiB;MAACc,IAAI,EAAE5B;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9D/B,OAAA,CAACJ,cAAc;MAACS,UAAU,EAAEA;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAlDID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}